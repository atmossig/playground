# Compiler settings
cxx = g++
cxxflags = -std=c++11 -Wall -Wextra -O2
ldflags = -lopengl32 -lglu32 -lfreeglut

# Directory structure
builddir = objects
bindir = bin
srcdir = src

# Rules
rule cxx
  command = $cxx $cxxflags -c $in -o $out
  description = Compiling $in

rule link
  command = $cxx $in -o $out $ldflags
  description = Linking $out

# Directory creation rules
rule mkdir
  command = cmd.exe /c if not exist $out mkdir $out
  description = Creating directory $out

# Ensure build directories exist
build $builddir: mkdir
build $bindir: mkdir

# Compile using the unity build approach
build $builddir/build_core.o: cxx $srcdir/_build_core.cpp | $builddir $srcdir/config.h $srcdir/main.cpp $srcdir/app.cpp $srcdir/app.h
build $builddir/build_core_game.o: cxx $srcdir/_build_core_game.cpp | $builddir $srcdir/config.h $srcdir/camera.cpp $srcdir/camera.h $srcdir/control.cpp $srcdir/control.h $srcdir/grid.cpp $srcdir/grid.h

# Link the final executable
build $bindir/playground.exe: link $builddir/build_core.o $builddir/build_core_game.o | $bindir
  description = Building playground executable

# Default target
default $bindir/playground.exe
